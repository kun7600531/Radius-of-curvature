global Tind Tind_max direc_flag1 direc_flag2 % 当前轨迹，轨迹最大数目
Tind = 1;
Tind_max = 1;
direc_flag1 = -1;% 轨迹的方向,需要根据实际读取的txt确定，-1/1
direc_flag2 = 1;% 圆弧的方向，-1/1
rmin = 0;% 半径下限
rmax = 0.3;% 半径上限
filefolder = '入口半径r\坐标信息';
dirfile = dir(fullfile(filefolder,'*.txt'));
fname = {dirfile.name};
data = load(fullfile(filefolder,fname{3}));% 读取数据
theta = pi/6;
while Tind<=Tind_max
    r0 = 0.01;
    [r(Tind),fval(Tind)] = fminbnd(@(r)theory_f(r, theta, data),0,0.3);
    Tind = Tind + 1;
end

% 绘图
figure
plot([data(:,1);data(1,1)],[data(:,2);data(1,2)],'b');
hold on

% 所有可能的圆弧绘图
if Tind_max ==1
line_prop = cal_myshape(r,theta,data);
for i = 1:size(data,1)% 边的数目
    for j=1:2% 每条边的2个点
        if line_prop(i).pos(j,3)~=0% 根据另一条线段编号判断是否存在圆弧
            plot(line_prop(i).arc(:,j*2-1),line_prop(i).arc(:,j*2),'k');
        end
    end
end
end

% 结果提取
color = {'r--','g--','p--'};
pc = {'ro','go','po'};
jc = {'r*','g*','p*'};
cc = {'rx','gx','px'};
for i = 1:Tind_max
    line_prop = cal_myshape(r(i),theta,data);
    tra = trajectory(line_prop,data);
    % 轨迹绘制
    plot([tra.route(:,1);tra.route(1,1)],[tra.route(:,2);tra.route(1,2)],color{mod(i-1,3)+1},'LineWidth',2);
    % 切点及已有交点绘制
    scatter(tra.point(:,1),tra.point(:,2),pc{mod(i-1,3)+1});
    % 虚拟交点绘制
    scatter(tra.jpoint(:,1),tra.jpoint(:,2),jc{mod(i-1,3)+1});
    % 圆心点绘制
    scatter(tra.cpoint(:,1),tra.cpoint(:,2),cc{mod(i-1,3)+1});
end
